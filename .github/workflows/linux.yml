name: CI Test

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        # disable macos for now until I figure out how to build verilator
        # os: [ ubuntu-latest, macos-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules 🖥️
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Setup Python environment 🐍
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version 🐍
      run: python -c "import sys; print(sys.version)"
    - name: Install Verilator 📁
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install verilator
    - name: Install Verilator 📁
      if: matrix.os == 'macOS-latest'
      run: brew install verilator
    - name: Install deps 🛠️
      shell: bash
      run: |
        pip install -e .[test]
    - name: Run tests ⚙️
      shell: bash
      run: |
        pytest tests/ -v
    - name: Build Python wheel 🎡
      shell: bash
      run: |
        pip3 install wheel
        python3 setup.py bdist_wheel
    - name: Upload artifact 🛖
      uses: actions/upload-artifact@v4
      with:
        name: Python Wheel ${{ matrix.python-version }}
        path: dist/
    - name: Publish distribution 📦 to PyPI
      if: startsWith(github.ref, 'refs/tags') && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
